{
    "{EnvironmentInit}": {
        "{CheckDependencies}": {
            "macOS": ">=11.0",
            "node": ">=18.0",
            "permissions": [
                "accessibility",
                "screen_recording"
            ]
        },
        "{InstallCore}": "[package_manager]:{npm|yarn|pnpm}",
        "{InitProject}": "strawberry_maus"
    },
    "{Stage1}": {
        "{CreateStructure}": {
            "/src": {
                "/capture": "[event_capture.js]",
                "/math": "[grid_calculator.js]",
                "/data": "[maus_mapper.js]"
            }
        },
        "{ImplementCapture}": {
            "[event_capture]": {
                "{InitializeMonitor}": "(monitorInstance)",
                "{SetupListeners}": "(eventListeners)",
                "{CreateBuffer}": "(eventBuffer)"
            }
        }
    },
    "{Stage2}": {
        "{CreateStructure}": {
            "/src": {
                "/capture": "[event_capture.js]",
                "/math": "[grid_calculator.js]",
                "/data": "[maus_mapper.js]"
            }
        },
        "{GridImplementation}": {
            "[grid_calculator]": {
                "{DefineGrid}": {
                    "resolution": "(screenWidth, screenHeight)",
                    "segments": "(gridX: 100, gridY: 100)",
                    "normalize": "(0_to_1_range)"
                },
                "{MapCoordinates}": {
                    "(pixelX, pixelY)": "{Transform}:(gridX, gridY)",
                    "(timestamp)": "{MapToTimeline}:(timelinePosition)",
                    "{CreateNode}": "(gridNode: {x, y, t})"
                }
            }
        },
        "{DataMapImplementation}": {
            "[maus_mapper]": {
                "{StructureData}": {
                    "events": "(eventArray[])",
                    "timeline": "(timelineMap{})",
                    "metadata": "(sessionInfo{})"
                },
                "{ParseToMaus}": {
                    "(gridNodes)": "{Format}",
                    "{Optimize}": "(compressedData)",
                    "{Serialize}": "(.maus_file)"
                }
            }
        },
        "{CaptureMouseEvent}": {
            "input": "(nativeEvent)",
            "process": {
                "{ExtractData}": {
                    "x": "(event.clientX)",
                    "y": "(event.clientY)",
                    "type": "(event.type)",
                    "time": "(Date.now())"
                },
                "{ValidateData}": "(isValidEvent)",
                "{QueueEvent}": "[event_buffer]"
            },
            "output": "(capturedEvent)"
        },
        "{CalculateGridPosition}": {
            "input": "(x: pixel, y: pixel)",
            "process": {
                "{GetScreenDimensions}": "(width, height)",
                "{Normalize}": {
                    "x_norm": "(x / width)",
                    "y_norm": "(y / height)"
                },
                "{ApplyGrid}": {
                    "grid_x": "(Math.floor(x_norm * gridSize))",
                    "grid_y": "(Math.floor(y_norm * gridSize))"
                }
            },
            "output": "(gridPosition: {x, y})"
        },
        "{MapToTimeline}": {
            "input": "(timestamp, startTime)",
            "process": {
                "{CalculateOffset}": "(timestamp - startTime)",
                "{ConvertToPosition}": "(offset / timeScale)",
                "{SnapToGrid}": "(Math.round(position * precision) / precision)"
            },
            "output": "(timelinePosition)"
        },
        "{CreateTransparentOverlay}": {
            "{WindowConfig}": {
                "type": "overlay",
                "transparent": true,
                "frame": false,
                "alwaysOnTop": true,
                "opacity": 0.1,
                "clickThrough": "(editMode ? false : true)"
            },
            "{RenderOverlay}": {
                "{DrawGrid}": "(showGrid ? gridLines : null)",
                "{DrawClickIndicators}": "(activeClicks[])",
                "{DrawPath}": "(recordedPath[])"
            }
        },
        "{VisualFeedback}": {
            "{OnClick}": {
                "{CreateRipple}": {
                    "center": "(clickX, clickY)",
                    "radius": "(0 -> 30px)",
                    "duration": "300ms",
                    "opacity": "(1 -> 0)"
                }
            },
            "{OnDrag}": {
                "{DrawPath}": {
                    "from": "(startPoint)",
                    "to": "(currentPoint)",
                    "style": "dashed",
                    "color": "strawberry_red"
                }
            }
        },
        "{RenderTimeline}": {
            "{InitializeCanvas}": {
                "width": "(containerWidth)",
                "height": "120px",
                "scale": "(pixelsPerSecond)"
            },
            "{DrawTimeMarkers}": {
                "(intervals)": "{ForEach}:{DrawMarker}",
                "{LabelTime}": "(formatTime(ms))"
            },
            "{PlotEvents}": {
                "(mausData.events)": "{ForEach}",
                "{DrawNode}": {
                    "x": "(event.time * scale)",
                    "y": "60px",
                    "radius": "6px",
                    "color": "(event.type.color)"
                }
            }
        },
        "{EnableEditing}": {
            "{NodeInteraction}": {
                "{OnSelect}": "(selectedNode)",
                "{ShowHandles}": "(dragHandles)",
                "{OnDrag}": {
                    "{UpdatePosition}": "(newTime)",
                    "{SnapToGrid}": "(snapInterval)",
                    "{UpdateData}": "[maus_data_map]"
                }
            },
            "{TimelineControls}": {
                "{Zoom}": "(scaleLevel: 0.1x -> 10x)",
                "{Pan}": "(offsetPosition)",
                "{Playhead}": "(currentTime)"
            }
        },
        "{SaveMausFile}": {
            "{PrepareData}": {
                "{CollectEvents}": "[event_buffer]",
                "{ProcessGrid}": "[math_maus]",
                "{FormatStructure}": "[maus_data_map]"
            },
            "{WriteFile}": {
                "{CreateHeader}": "(version, timestamp, metadata)",
                "{SerializeEvents}": "(JSON.stringify(events))",
                "{Compress}": "(optional: gzip)",
                "{Save}": "(filepath.maus)"
            }
        },
        "{LoadMausFile}": {
            "{ReadFile}": "(filepath.maus)",
            "{ParseData}": {
                "{ValidateHeader}": "(checkVersion)",
                "{DeserializeEvents}": "(JSON.parse(content))",
                "{ValidateIntegrity}": "(checksum)"
            },
            "{LoadIntoSystem}": {
                "{PopulateTimeline}": "[berry_timeline]",
                "{UpdateWindow}": "[berry_window]",
                "{SetPlaybackReady}": "(true)"
            }
        },
        "{PlaybackController}": {
            "{InitPlayback}": {
                "{LoadSequence}": "(mausData.events)",
                "{SetSpeed}": "(playbackSpeed: 1.0)",
                "{ResetPosition}": "(startTime: 0)"
            },
            "{ExecutePlayback}": {
                "{StartTimer}": "(intervalTimer)",
                "{ProcessNextEvent}": {
                    "{CheckTime}": "(currentTime >= eventTime)",
                    "{ExecuteClick}": "(simulateClick(event))",
                    "{UpdateVisual}": "[berry_window]"
                },
                "{OnComplete}": "(resetState())"
            }
        },
        "{ErrorHandler}": {
            "{CaptureErrors}": {
                "permission_denied": {
                    "{Alert}": "Request accessibility permissions",
                    "{Guide}": "System Preferences > Security > Accessibility"
                },
                "invalid_data": {
                    "{Validate}": "(dataIntegrity)",
                    "{Recover}": "(lastValidState)",
                    "{Log}": "(errorDetails)"
                },
                "playback_failure": {
                    "{Stop}": "(immediateHalt)",
                    "{Diagnose}": "(failurePoint)",
                    "{Suggest}": "(alternativeAction)"
                }
            }
        },
        "{OptimizePerformance}": {
            "{EventBatching}": {
                "buffer_size": "100_events",
                "flush_interval": "100ms",
                "compression": "group_similar"
            },
            "{MemoryManagement}": {
                "{LimitBuffer}": "10000_events_max",
                "{StreamToDisk}": "(largeRecordings)",
                "{GarbageCollect}": "(unusedReferences)"
            },
            "{RenderOptimization}": {
                "{VirtualizeTimeline}": "(renderVisibleOnly)",
                "{ThrottleUpdates}": "(requestAnimationFrame)",
                "{CacheCalculations}": "(gridPositions)"
            }
        },
        "{TestProcedures}": {
            "{UnitTests}": {
                "[test_grid_math]": {
                    "{TestNormalization}": "(coordinates)",
                    "{TestEdgeCases}": "(boundaries)",
                    "{TestPrecision}": "(floatingPoint)"
                },
                "[test_event_capture]": {
                    "{MockEvents}": "(syntheticEvents)",
                    "{ValidateCapture}": "(accuracy)",
                    "{TestThroughput}": "(eventsPerSecond)"
                }
            },
            "{IntegrationTests}": {
                "{RecordPlaybackCycle}": {
                    "{Record}": "(testSequence)",
                    "{Save}": "(tempFile)",
                    "{Load}": "(tempFile)",
                    "{Playback}": "(verifyAccuracy)"
                }
            }
        },
        "{DebugMode}": {
            "{EnableLogging}": {
                "events": "(console.table(eventData))",
                "grid": "(visualizeGrid())",
                "timeline": "(showDebugInfo())"
            },
            "{DebugOverlay}": {
                "{ShowCoordinates}": "(realtimeXY)",
                "{ShowGrid}": "(gridLines)",
                "{ShowEventCount}": "(bufferSize)",
                "{ShowPerformance}": "(fps, memory)"
            }
        },
        "{BuildConfiguration}": {
            "{Development}": {
                "debug": true,
                "sourceMaps": true,
                "hotReload": true
            },
            "{Production}": {
                "minify": true,
                "optimize": true,
                "sign": "(developerCertificate)"
            },
            "{Package}": {
                "format": ".app",
                "platform": "macOS",
                "installer": "(dmg_or_pkg)"
            }
        }
    }
}
